{"version":3,"sources":["components/Expresso/Section.js/Section.jsx","components/Expresso/Statistics/Statistics.jsx","components/Expresso/FeedbackOptions/FeedbackOptions.jsx","components/Expresso/Notification/Notification.jsx","components/Expresso/Expresso.js","App.jsx","index.jsx"],"names":["Section","title","children","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Notification","message","Expresso","state","leaveFeedback","setState","prevState","countTotalFeedback","Object","values","reduce","acc","value","countPositiveFeedbackPercentage","countPercentage","Math","round","this","keys","Component","defaultProps","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAceA,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACb,gCACG,6BAAKD,IACJC,MCgBQC,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OAChB,+BACG,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,WCSSC,EAfS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACrB,8BACKD,EAAQE,KAAI,SAAAC,GAAM,OACjB,wBAAqBC,KAAK,SAASC,QAAS,kBAAMJ,EAAgBE,IAAlE,SACIA,GADSA,SCOPG,EAVM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OAClB,8BACIA,KCIDC,G,kNAMHC,MAAQ,CACLf,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGRc,cAAgB,SAACD,GACd,EAAKE,UAAS,SAAAC,GAAS,sBACnBH,EAAQG,EAAUH,GAAS,O,EAIlCI,mBAAqB,WAClB,OAAOC,OAAOC,OAAO,EAAKN,OAAOO,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,I,EAExEC,gCAAkC,WAC/B,IAAMC,EAAkBC,KAAKC,MAAa,EAAKb,MAAMf,KAAO,EAAKmB,qBAA9B,KACnC,OAAOO,EAAkB,EACpBA,EACA,G,uDAKL,IAAMvB,EAAQ0B,KAAKV,qBACbf,EAAqByB,KAAKJ,kCAEhC,OACG,qCACG,cAAC,EAAD,CAAS5B,MAAM,wBAAf,SACG,cAAC,EAAD,CACGS,QAASc,OAAOU,KAAKD,KAAKd,OAC1BR,gBAAiBsB,KAAKb,kBAG5B,cAAC,EAAD,CAASnB,MAAM,aAAf,SACIM,EAAQ,EACJ,cAAE,EAAF,CACCH,KAAM6B,KAAKd,MAAMf,KACjBC,QAAS4B,KAAKd,MAAMd,QACpBC,IAAK2B,KAAKd,MAAMb,IAChBC,MAAOA,EACPC,mBAAoBA,IAGrB,cAAC,EAAD,CAAcS,QAAQ,+B,GAnDnBkB,cAAjBjB,EAEIkB,aAAe,GA0DVlB,QClEA,SAASmB,IACtB,OACE,8BACE,cAAC,EAAD,MCANC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACH,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.fd9e3dc6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => (\r\n   <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n   </div>\r\n);\r\n\r\n\r\nSection.propTypes = {\r\n   title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n   <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {positivePercentage}%</li>\r\n   </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n   good: PropTypes.number.isRequired,\r\n   neutral: PropTypes.number.isRequired,\r\n   bad: PropTypes.number.isRequired,\r\n   total: PropTypes.number.isRequired,\r\n   positivePercentage: PropTypes.number.isRequired,\r\n\r\n};\r\n\r\nexport default Statistics;","import PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n   <div >\r\n      { options.map(option => (\r\n         <button key={option} type=\"button\" onClick={() => onLeaveFeedback(option)}>\r\n            {option}\r\n         </button>\r\n      ))}\r\n   </div >\r\n)\r\n\r\nFeedbackOptions.propTypes = {\r\n   onLeaveFeedback: PropTypes.func.isRequired,\r\n   options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n};\r\n\r\nexport default FeedbackOptions;","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => (\r\n   <div>\r\n      {message}\r\n   </div>\r\n)\r\n\r\nNotification.propTypes = {\r\n   message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;","\r\nimport { Component } from 'react'\r\nimport Section from './Section.js/Section'\r\nimport Statistics from './Statistics/Statistics'\r\nimport FeedbackOptions from './FeedbackOptions/FeedbackOptions'\r\nimport Notification from './Notification/Notification'\r\nimport './Expresso.module.css';\r\n\r\nclass Expresso extends Component {\r\n\r\n   static defaultProps = {}\r\n\r\n   static propTypes = {}\r\n\r\n   state = {\r\n      good: 0,\r\n      neutral: 0,\r\n      bad: 0,\r\n   }\r\n\r\n   leaveFeedback = (state) => {\r\n      this.setState(prevState => ({\r\n         [state]: prevState[state] + 1\r\n      }))\r\n   }\r\n\r\n   countTotalFeedback = () => {\r\n      return Object.values(this.state).reduce((acc, value) => acc + value, 0);\r\n   }\r\n   countPositiveFeedbackPercentage = () => {\r\n      const countPercentage = Math.round(100 * (this.state.good / this.countTotalFeedback()));\r\n      return countPercentage > 0\r\n         ? countPercentage\r\n         : 0;\r\n   }\r\n\r\n   render() {\r\n\r\n      const total = this.countTotalFeedback();\r\n      const positivePercentage = this.countPositiveFeedbackPercentage();\r\n\r\n      return (\r\n         <>\r\n            <Section title=\"Please leave feedback\">\r\n               <FeedbackOptions\r\n                  options={Object.keys(this.state)}\r\n                  onLeaveFeedback={this.leaveFeedback}\r\n               />\r\n            </Section>\r\n            <Section title=\"Statistics\">\r\n               {total > 0\r\n                  ? < Statistics\r\n                     good={this.state.good}\r\n                     neutral={this.state.neutral}\r\n                     bad={this.state.bad}\r\n                     total={total}\r\n                     positivePercentage={positivePercentage}\r\n                  />\r\n\r\n                  : <Notification message=\"No feedback given\"></Notification>\r\n\r\n               }\r\n            </Section>\r\n         </>\r\n      )\r\n   }\r\n}\r\n\r\nexport default Expresso;","import Expresso from './components/Expresso/Expresso'\n\nexport default function App() {\n  return (\n    <div>\n      <Expresso></Expresso>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}